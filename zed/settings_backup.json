// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "outline_panel": {
    "button": false
  },
  "tabs": {
    "git_status": false,
    "file_icons": true
  },
  "features": {
    "edit_prediction_provider": "copilot"
  },
  "project_panel": {
    "hide_gitignore": false,
    "dock": "right"
  },
  "base_keymap": "Cursor",
  "agent": {
    "always_allow_tool_actions": true,
    "default_model": {
      "provider": "copilot_chat",
      "model": "claude-sonnet-4"
    }
  },
  "indent_guides": {
    "enabled": true,
    "coloring": "indent_aware"
  },
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  "theme": "Catppuccin Macchiato",
  "ui_font_size": 16,
  "buffer_font_size": 16,
  "tab_size": 2,
  "cursor_blink": true,
  "buffer_font_family": "CaskaydiaMono Nerd Font Mono",
  "preferred_line_length": 80,
  "buffer_line_height": "comfortable",
  "ui_font_family": "CaskaydiaMono Nerd Font",
  "autosave": "on_focus_change",
  "vim_mode": false,
  "confirm_quit": false,
  "hover_popover_enabled": true,
  "inlay_hints": {
    "enabled": false,
    "show_type_hints": true,
    "show_parameter_hints": true,
    "show_other_hints": true,
    "edit_debounce_ms": 700,
    "scroll_debounce_ms": 50
  },
  "terminal": {
    "alternate_scroll": "off",
    "blinking": "terminal_controlled",
    "copy_on_select": false,
    "env": {},
    "font_family": null,
    "font_features": null,
    "font_size": null,
    "option_as_meta": false,
    "shell": "system",
    "working_directory": "current_project_directory"
  },
  "git": {
    "git_gutter": "tracked_files",
    "inline_blame": {
      "enabled": true
    }
  },
  "use_autoclose": true,
  "lsp": {
    "typescript-language-server": {
      "initialization_options": {
        "preferences": {
          "includeInlayParameterNameHints": "all",
          "includeInlayParameterNameHintsWhenArgumentMatchesName": true,
          "includeInlayFunctionParameterTypeHints": true,
          "includeInlayVariableTypeHints": true,
          "includeInlayVariableTypeHintsWhenTypeMatchesName": false,
          "includeInlayPropertyDeclarationTypeHints": true,
          "includeInlayFunctionLikeReturnTypeHints": true,
          "includeInlayEnumMemberValueHints": true
        }
      }
    }
  },
  "languages": {
    "JavaScript": {
      "formatter": [{ "code_action": "source.fixAll.eslint" }]
    },
    "TypeScript": {
      "formatter": [{ "code_action": "source.fixAll.eslint" }]
    },
    "TSX": {
      "formatter": [{ "code_action": "source.fixAll.eslint" }]
    }
  }
}
